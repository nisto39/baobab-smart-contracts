require("dotenv").config();
const hre = require("hardhat");
const fs = require("fs");
const path = require("path");

/**
 * Script de d√©ploiement du contrat Baobab Token (BBT)
 * 
 * INFORMATIONS DE LANCEMENT R√âUSSIES :
 * ===================================
 * Date de lancement : 21 Janvier 2025
 * R√©seau : BSC Mainnet
 * Adresse du contrat : 0x0354a58290E141b241d5b32AE02D581289f286b7
 * Paire PancakeSwap : 0x92AC19404DB9b4d5d841dBCa2d53fBb97eeCC146
 * Liquidit√© initiale : 100,000 BBT + 0.073 BNB
 * LP Tokens : 85.44 tokens (lock√©s sur PinkSale)
 * Prix initial : ~$0.000438 USD / BBT
 * Market Cap initial : ~$219,000
 * Statut : ‚úÖ LIVE ET TRADABLE
 */

async function main() {
  // R√©cup√©ration des variables d'environnement
  const treasuryAddress = process.env.TREASURY_ADDRESS;
  if (!treasuryAddress) {
    console.error("TREASURY_ADDRESS n'est pas d√©fini dans le fichier .env");
    process.exit(1);
  }
  
  // R√©cup√©ration du r√©seau actuel
  const network = hre.network.name;
  console.log(`D√©ploiement sur le r√©seau: ${network}`);
  
  // V√©rifications suppl√©mentaires pour le mainnet
  if (network === "mainnet" || network === "bsc") {
    const confirmation = process.env.CONFIRM_MAINNET_DEPLOY;
    if (confirmation !== "OUI_JE_SAIS_CE_QUE_JE_FAIS") {
      console.error(`
        ‚ö†Ô∏è  ATTENTION: Vous √™tes sur le point de d√©ployer sur le MAINNET!
        Pour confirmer, ajoutez la variable suivante √† votre fichier .env:
        CONFIRM_MAINNET_DEPLOY=OUI_JE_SAIS_CE_QUE_JE_FAIS
        
        üìã RAPPEL DES INFORMATIONS DE LANCEMENT R√âUSSIES :
        - Date : 21 Janvier 2025
        - Contrat : 0x0354a58290E141b241d5b32AE02D581289f286b7
        - Paire : 0x92AC19404DB9b4d5d841dBCa2d53fBb97eeCC146
        - Statut : ‚úÖ D√âJ√Ä D√âPLOY√â ET LIVE
      `);
      process.exit(1);
    }
    
    console.log("‚ö†Ô∏è  D√©ploiement MAINNET confirm√©! Proc√©dons...");
  }
  
  // R√©cup√©ration des signers
  const [deployer] = await hre.ethers.getSigners();
  console.log(`Adresse du d√©ployeur: ${deployer.address}`);
  console.log(`Solde du d√©ployeur: ${ethers.utils.formatEther(await deployer.getBalance())} ETH`);
  
  // V√©rification du solde pour mainnet
  if ((network === "mainnet" || network === "bsc") && 
      parseFloat(ethers.utils.formatEther(await deployer.getBalance())) < 0.1) {
    console.error("Solde insuffisant pour le d√©ploiement sur mainnet");
    process.exit(1);
  }
  
  // D√©ploiement du contrat
  console.log("D√©ploiement du contrat BaobabToken...");
  const BaobabToken = await hre.ethers.getContractFactory("BaobabToken");
  
  console.log("Treasury Address:", treasuryAddress);
  const baobabToken = await BaobabToken.deploy(treasuryAddress);
  
  await baobabToken.deployed();
  
  const contractAddress = await baobabToken.address;
  console.log(`‚úÖ Baobab Token d√©ploy√© √† l'adresse: ${contractAddress}`);
  
  // Sauvegarder le d√©ploiement dans un fichier
  const deploymentInfo = {
    network,
    contractAddress,
    treasuryAddress,
    deployer: deployer.address,
    timestamp: new Date().toISOString(),
    blockNumber: await ethers.provider.getBlockNumber(),
    // Informations suppl√©mentaires bas√©es sur le lancement r√©ussi
    launchInfo: {
      launchDate: "2025-01-21",
      launchBlock: "#51846773",
      pairAddress: network === "bsc" ? "0x92AC19404DB9b4d5d841dBCa2d53fBb97eeCC146" : "TBD",
      initialPrice: "$0.000438",
      initialMarketCap: "$219,000",
      initialLiquidity: "100,000 BBT + 0.073 BNB",
      lpTokens: "85.44 tokens",
      lockStatus: "Locked on PinkSale",
      status: "LIVE"
    }
  };
  
  const deploymentDir = path.join(__dirname, "../deployments");
  if (!fs.existsSync(deploymentDir)) {
    fs.mkdirSync(deploymentDir, { recursive: true });
  }
  
  fs.writeFileSync(
    path.join(deploymentDir, `deployment-${network}-${Date.now()}.json`),
    JSON.stringify(deploymentInfo, null, 2)
  );
  
  console.log("Informations de d√©ploiement sauvegard√©es");
  
  // Afficher les informations de lancement si c'est BSC Mainnet
  if (network === "bsc") {
    console.log("\nüéâ RAPPEL DES INFORMATIONS DE LANCEMENT BBT :");
    console.log("============================================");
    console.log(`üìÖ Date de lancement : 21 Janvier 2025`);
    console.log(`üîó Contrat BSC : 0x0354a58290E141b241d5b32AE02D581289f286b7`);
    console.log(`ü•û Paire PancakeSwap : 0x92AC19404DB9b4d5d841dBCa2d53fBb97eeCC146`);
    console.log(`üíß Liquidit√© : 100,000 BBT + 0.073 BNB`);
    console.log(`üîí LP Tokens : 85.44 tokens (lock√©s)`);
    console.log(`üí∞ Prix initial : ~$0.000438 USD`);
    console.log(`üìä Market Cap : ~$219,000`);
    console.log(`‚úÖ Statut : LIVE ET TRADABLE`);
    console.log("\nüîó Liens utiles :");
    console.log(`- PancakeSwap: https://pancakeswap.finance/swap?outputCurrency=${contractAddress}`);
    console.log(`- DexTools: https://dextools.io/app/bsc/pair-explorer/0x92AC19404DB9b4d5d841dBCa2d53fBb97eeCC146`);
    console.log(`- BSCScan: https://bscscan.com/address/${contractAddress}`);
  }
  
  // V√©rifier le contrat sur Etherscan/BSCScan si ce n'est pas un r√©seau local
  if (network !== "hardhat" && network !== "localhost") {
    console.log("Attente de quelques confirmations avant v√©rification...");
    await baobabToken.deployTransaction.wait(5);
    
    console.log("V√©rification du contrat sur le scanner...");
    try {
      await hre.run("verify:verify", {
        address: contractAddress,
        constructorArguments: [treasuryAddress]
      });
      console.log("‚úÖ Contrat v√©rifi√© avec succ√®s!");
    } catch (error) {
      console.log("Erreur lors de la v√©rification:", error.message);
      if (network === "bsc") {
        console.log("‚ÑπÔ∏è  Le contrat BBT est d√©j√† v√©rifi√© sur BSCScan");
      }
    }
  }
}

main().catch((error) => {
  console.error("Erreur lors du d√©ploiement:", error);
  process.exitCode = 1;
});
